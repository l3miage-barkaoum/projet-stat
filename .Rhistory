q()
q()
knitr::opts_chunk$set(echo = TRUE)
depression_counts<- table(round(resultat$Depression))
setwd("C:/Users/mbarkaoui/Desktop/Stat")
load("C:/Users/mbarkaoui/Desktop/Stat/.RData")
depression_counts<- table(round(resultat$Depression))
#J'ai fait un round car y a deux personnes qui ont mis 3.5 et je l'ai ai compté avec 4
depression_counts_df <- as.data.frame(depression_counts)
print(depression_counts_df)
# Renommer les colonnes du data frame
colnames(depression_counts_df) <- c("Niveau de dépression", "Nombre de personnes")
barplot(depression_counts_df$`Nombre de personnes`, names.arg = depression_counts_df$`Niveau de dépression`,
xlab = "Niveau de dépression", ylab = "Nombre de personnes", main = "Barplot de la dépression")
#points(seq(0,10,1.5),dnorm(seq(0,10,1.5),mean(depression_counts_df$`Nombre de #personnes`),sd(depression_counts_df$`Nombre de personnes`)),col=2,type="l")
curve(dnorm(depression_counts_df$`Nombre de personnes`, mean(depression_counts_df$`Nombre de personnes`), sd(depression_counts_df$`Nombre de personnes`), col=2, add=TRUE, lty=2))
depression_counts<- table(round(resultat$Depression))
#J'ai fait un round car y a deux personnes qui ont mis 3.5 et je l'ai ai compté avec 4
depression_counts_df <- as.data.frame(depression_counts)
print(depression_counts_df)
# Renommer les colonnes du data frame
colnames(depression_counts_df) <- c("Niveau de dépression", "Nombre de personnes")
barplot(depression_counts_df$`Nombre de personnes`, names.arg = depression_counts_df$`Niveau de dépression`,
xlab = "Niveau de dépression", ylab = "Nombre de personnes", main = "Barplot de la dépression")
#points(seq(0,10,1.5),dnorm(seq(0,10,1.5),mean(depression_counts_df$`Nombre de #personnes`),sd(depression_counts_df$`Nombre de personnes`)),col=2,type="l")
#curve(dnorm(depression_counts_df$`Nombre de personnes`, mean(depression_counts_df$`Nombre de personnes`), sd(depression_counts_df$`Nombre de personnes`), col=2, add=TRUE, lty=2))
#print(resultat$Depression)
qqnorm(resultat$Depression)
abline(mean(resultat$Depression),sd(resultat$Depression),col=2)
depression_counts<- table(round(resultat$Depression))
#J'ai fait un round car y a deux personnes qui ont mis 3.5 et je l'ai ai compté avec 4
depression_counts_df <- as.data.frame(depression_counts)
print(depression_counts_df)
# Renommer les colonnes du data frame
colnames(depression_counts_df) <- c("Niveau de dépression", "Nombre de personnes")
barplot(depression_counts_df$`Nombre de personnes`, names.arg = depression_counts_df$`Niveau de dépression`,
xlab = "Niveau de dépression", ylab = "Nombre de personnes", main = "Barplot de la dépression")
points(seq(0,10,1.5),dnorm(seq(0,10,1.5),mean(depression_counts_df$`Nombre de personnes`),sd(depression_counts_df$`Nombre de personnes`)),col=2,type="l")
#curve(dnorm(depression_counts_df$`Nombre de personnes`, mean(depression_counts_df$`Nombre de personnes`), sd(depression_counts_df$`Nombre de personnes`), col=2, add=TRUE, lty=2))
#print(resultat$Depression)
qqnorm(resultat$Depression)
abline(mean(resultat$Depression),sd(resultat$Depression),col=2)
depression_counts<- table(round(resultat$Depression))
#J'ai fait un round car y a deux personnes qui ont mis 3.5 et je l'ai ai compté avec 4
depression_counts_df <- as.data.frame(depression_counts)
print(depression_counts_df)
# Renommer les colonnes du data frame
colnames(depression_counts_df) <- c("Niveau de dépression", "Nombre de personnes")
barplot(depression_counts_df$`Nombre de personnes`, names.arg = depression_counts_df$`Niveau de dépression`,
xlab = "Niveau de dépression", ylab = "Nombre de personnes", main = "Barplot de la dépression")
points(seq(0,10,.5),dnorm(seq(0,10,0.5),mean(depression_counts_df$`Nombre de personnes`),sd(depression_counts_df$`Nombre de personnes`)),col=2,type="l")
#curve(dnorm(depression_counts_df$`Nombre de personnes`, mean(depression_counts_df$`Nombre de personnes`), sd(depression_counts_df$`Nombre de personnes`), col=2, add=TRUE, lty=2))
#print(resultat$Depression)
qqnorm(resultat$Depression)
abline(mean(resultat$Depression),sd(resultat$Depression),col=2)
depression_counts<- table(round(resultat$Depression))
#J'ai fait un round car y a deux personnes qui ont mis 3.5 et je l'ai ai compté avec 4
depression_counts_df <- as.data.frame(depression_counts)
print(depression_counts_df)
# Renommer les colonnes du data frame
colnames(depression_counts_df) <- c("Niveau de dépression", "Nombre de personnes")
barplot(depression_counts_df$`Nombre de personnes`, names.arg = depression_counts_df$`Niveau de dépression`,
xlab = "Niveau de dépression", ylab = "Nombre de personnes",
main = "Barplot de la dépression", prob = TRUE)
points(seq(0,10,.5),dnorm(seq(0,10,0.5),mean(depression_counts_df$`Nombre de personnes`),sd(depression_counts_df$`Nombre de personnes`)),col=2,type="l")
#curve(dnorm(depression_counts_df$`Nombre de personnes`, mean(depression_counts_df$`Nombre de personnes`), sd(depression_counts_df$`Nombre de personnes`), col=2, add=TRUE, lty=2))
#print(resultat$Depression)
qqnorm(resultat$Depression)
abline(mean(resultat$Depression),sd(resultat$Depression),col=2)
depression_counts<- table(round(resultat$Depression))
#J'ai fait un round car y a deux personnes qui ont mis 3.5 et je l'ai ai compté avec 4
depression_counts_df <- as.data.frame(depression_counts)
print(depression_counts_df)
# Renommer les colonnes du data frame
colnames(depression_counts_df) <- c("Niveau de dépression", "Nombre de personnes")
hist(depression_counts_df$`Nombre de personnes`, names.arg = depression_counts_df$`Niveau de dépression`,
xlab = "Niveau de dépression", ylab = "Nombre de personnes",
main = "Barplot de la dépression", prob = TRUE)
points(seq(0,10,.5),dnorm(seq(0,10,0.5),mean(depression_counts_df$`Nombre de personnes`),sd(depression_counts_df$`Nombre de personnes`)),col=2,type="l")
#curve(dnorm(depression_counts_df$`Nombre de personnes`, mean(depression_counts_df$`Nombre de personnes`), sd(depression_counts_df$`Nombre de personnes`), col=2, add=TRUE, lty=2))
#print(resultat$Depression)
qqnorm(resultat$Depression)
abline(mean(resultat$Depression),sd(resultat$Depression),col=2)
library(ggplot2)
library(ggplot2)
V<- B +W
V<- B +W
print(V)
rapport_correlation<- B/V
rapport_correlation<- B/V
print(rapport_correlation)
#plot(resultat$Age, resultat$BPM,xlab = "Âge", ylab = "BPM",ylim = c(0, 180))
cor(resultat$Age, resultat$BPM)
table = data.frame(resultat$Age, resultat$BPM)
colnames(table)[1] <- "Age";
colnames(table)[2] <- "BPM";
ggplot(data = table, aes(x = Age, y = BPM)) +
ylim(0, 180) +
geom_point() +
geom_smooth(method = "lm", color = "orange")
exploratory_plateform<- data.frame(resultat$Primary.streaming.service,resultat$Exploratory)
tableau_contingence<- table(exploratory_plateform$resultat.Primary.streaming.service,exploratory_plateform$resultat.Exploratory)
#Tableau de contingence
print(tableau_contingence)
#Représentation graphique
colnames(df)<- c("Plateform", "Response", "Effectif")
ggplot(df, aes(x =Plateform, y=Effectif, fill=Response))+
geom_bar(stat = "identity", position = "stack")+
labs(c="Plateforme de streaming de musique", y="Nombre de réponses", fill="Réponse")+
theme_minimal()
#Il faut commenter ça
bpm_counts<-table(resultat$BPM)
bpm_counts_df<- as.data.frame(bpm_counts)
#Ici on supprime la dernière ligne car elle contient 999999 beats / minute ce qui est une valeur impossible
bpm_counts_df <- bpm_counts_df[1:(nrow(bpm_counts_df)-1), ]
# Créer le diagramme en bâtons
colnames(bpm_counts_df) <- c( "Nombre de beats", "Nombres de réponses")
# Créer le graphique à barres
bar_plot <- ggplot(data.frame(bpm_counts_df),
aes(x = bpm_counts_df$`Nombre de beats`, y = bpm_counts_df$`Nombres de réponses`)) +
geom_bar(stat = "identity")+ theme(axis.text.x = element_text(angle = -90, vjust = 0.5, hjust=1))+
labs(x = "La fréquence à laquelle la personne écoute de la musique Rock", y = "Nombre de réponses", title = "Graphe représentant la variance de la fréquence à laquelle les participants écoutent de la musique Rock"+
scale_x_continuous(breaks = seq(0, 140, 10)))
#points(seq(0,140,0.5),dnorm(seq(0,140,0.5),mean(resultat$BPM),sd(resultat$BPM)),col=2,type="l")
print(bar_plot)
bar_plot <- bar_plot +
geom_line(data = data.frame(x = seq(0, 140, 0.5)),
aes(x = x, y = dnorm(x, mean(resultat$BPM), sd(resultat$BPM))),
col = "red")
print(bar_plot)
moy <-mean(resultat$BPM) # moyenne de la population.
median(bpm_counts_df$`Nombres de réponses`)
std <- sd(resultat$BPM) # écart-type de la population
plot(function(x) dnorm(x,moy,std),main = "",lwd=3,xlab="Taille des pièces (en mm)",ylab="Fréquence")
plot(bpm_counts_df$`Nombre de beats`, bpm_counts_df$`Nombres de réponses`, type)
# Compter le nombre de réponses "oui" et "non"
exploratory_counts <- table(resultat$Exploratory)
#Conversion en data frame
exploratory_counts_df <- as.data.frame(exploratory_counts)
# Renommer les colonnes du data frame
colnames(exploratory_counts_df) <- c("Reponse", "Nombre de personnes")
# Créer le graphique à barres
bar_plot <- ggplot(data.frame(Exploratory = names(exploratory_counts_df), Count = exploratory_counts_df),
aes(x = exploratory_counts_df$Reponse, y = exploratory_counts_df$`Nombre de personnes`)) +
geom_bar(stat = "identity") +
labs(x = "Si la personne explore de nouveaux genres musicaux/artistes", y = "Nombre de réponses", title = "Graphe représantant la tendance des personne à explorer de nouveaux genres") +
theme_minimal()
# Définir les couleurs des barres
# Afficher le graphique
print(bar_plot)
# Compter le nombre de réponses "oui" et "non"
exploratory_counts <- table(resultat$Exploratory)
#Conversion en data frame
exploratory_counts_df <- as.data.frame(exploratory_counts)
# Renommer les colonnes du data frame
colnames(exploratory_counts_df) <- c("Reponse", "Nombre de personnes")
# Créer le graphique à barres
bar_plot <- ggplot(data.frame(Exploratory = names(exploratory_counts_df), Count = exploratory_counts_df),
aes(x = exploratory_counts_df$Reponse, y = exploratory_counts_df$`Nombre de personnes`)) +
geom_bar(stat = "identity") +
labs(x = "Si la personne explore de nouveaux genres musicaux/artistes", y = "Nombre de réponses", title = "Graphe représantant la tendance des personne à explorer de nouveaux genres")
# Définir les couleurs des barres
# Afficher le graphique
print(bar_plot)
#plot(resultat$Age, resultat$BPM,xlab = "Âge", ylab = "BPM",ylim = c(0, 180))
cor(resultat$Age, resultat$BPM)
table = data.frame(resultat$Age, resultat$BPM)
colnames(table)[1] <- "Age";
colnames(table)[2] <- "BPM";
ggplot(data = table, aes(x = Age, y = BPM)) +
ylim(0, 180) +
geom_point() +
geom_smooth(method = "lm", color = "orange")
ggplot(data =exploratory_counts_df )
# Compter le nombre de réponses "oui" et "non"
exploratory_counts <- table(resultat$Exploratory)
#Conversion en data frame
exploratory_counts_df <- as.data.frame(exploratory_counts)
# Renommer les colonnes du data frame
colnames(exploratory_counts_df) <- c("Reponse", "Nombre de personnes")
# Créer le graphique à barres
bar_plot <- ggplot(data.frame(Exploratory = names(exploratory_counts_df),
Count = exploratory_counts_df),aes(x = exploratory_counts_df$Reponse,
y = exploratory_counts_df$`Nombre de personnes`)) +
geom_bar(stat = "identity") +
labs(x = "Si la personne explore de nouveaux genres musicaux/artistes", y = "Nombre de réponses", title = "Graphe représantant la tendance des personne à explorer de nouveaux genres/artistes")
# Définir les couleurs des barres
# Afficher le graphique
print(baexploratory_counts_df, col=c("lightblue", "lightgreen"))
# Compter le nombre de réponses "oui" et "non"
exploratory_counts <- table(resultat$Exploratory)
#Conversion en data frame
exploratory_counts_df <- as.data.frame(exploratory_counts)
# Renommer les colonnes du data frame
colnames(exploratory_counts_df) <- c("Reponse", "Nombre de personnes")
# Créer le graphique à barres
bar_plot <- ggplot(data.frame(Exploratory = names(exploratory_counts_df),
Count = exploratory_counts_df),aes(x = exploratory_counts_df$Reponse,
y = exploratory_counts_df$`Nombre de personnes`)) +
geom_bar(stat = "identity") +
labs(x = "Si la personne explore de nouveaux genres musicaux/artistes", y = "Nombre de réponses", title = "Graphe représantant la tendance des personne à explorer de nouveaux genres/artistes")
# Définir les couleurs des barres
# Afficher le graphique
print(exploratory_counts_df, col=c("lightblue", "lightgreen"))
# Compter le nombre de réponses "oui" et "non"
exploratory_counts <- table(resultat$Exploratory)
#Conversion en data frame
exploratory_counts_df <- as.data.frame(exploratory_counts)
# Renommer les colonnes du data frame
colnames(exploratory_counts_df) <- c("Reponse", "Nombre de personnes")
# Créer le graphique à barres
bar_plot <- ggplot(data.frame(Exploratory = names(exploratory_counts_df),
Count = exploratory_counts_df),aes(x = exploratory_counts_df$Reponse,
y = exploratory_counts_df$`Nombre de personnes`)) +
geom_bar(stat = "identity") +
labs(x = "Si la personne explore de nouveaux genres musicaux/artistes", y = "Nombre de réponses", title = "Graphe représantant la tendance des personne à explorer de nouveaux genres/artistes")
# Définir les couleurs des barres
# Afficher le graphique
barplot(exploratory_counts_df, col=c("lightblue", "lightgreen"))
# Compter le nombre de réponses "oui" et "non"
exploratory_counts <- table(resultat$Exploratory)
#Conversion en data frame
exploratory_counts_df <- as.data.frame(exploratory_counts)
# Renommer les colonnes du data frame
colnames(exploratory_counts_df) <- c("Reponse", "Nombre de personnes")
# Créer le graphique à barres
bar_plot <- ggplot(data.frame(Exploratory = names(exploratory_counts_df),
Count = exploratory_counts_df),aes(x = exploratory_counts_df$Reponse,
y = exploratory_counts_df$`Nombre de personnes`)) +
geom_bar(stat = "identity") +
labs(x = "Si la personne explore de nouveaux genres musicaux/artistes", y = "Nombre de réponses", title = "Graphe représantant la tendance des personne à explorer de nouveaux genres/artistes")
# Définir les couleurs des barres
# Afficher le graphique
barplot(exploratory_counts, col=c("lightblue", "lightgreen"))
# Compter le nombre de réponses "oui" et "non"
exploratory_counts <- table(resultat$Exploratory)
#Conversion en data frame
exploratory_counts_df <- as.data.frame(exploratory_counts)
# Renommer les colonnes du data frame
colnames(exploratory_counts_df) <- c("Reponse", "Nombre de personnes")
# Créer le graphique à barres
bar_plot <- ggplot(data.frame(Exploratory = names(exploratory_counts_df),
Count = exploratory_counts_df),aes(x = exploratory_counts_df$Reponse,
y = exploratory_counts_df$`Nombre de personnes`)) +
geom_bar(stat = "identity") +
labs(x = "Si la personne explore de nouveaux genres musicaux/artistes", y = "Nombre de réponses", title = "Graphe représantant la tendance des personne à explorer de nouveaux genres/artistes")
# Définir les couleurs des barres
# Afficher le graphique
barplot(exploratory_counts, col=c("#B2D8B2", "#D4EEFF"))
